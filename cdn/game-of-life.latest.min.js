/*
 * The MIT License (MIT)
 * 
 * Copyright (c) 2014 Stefan Dollase
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
function GameOfLife(e){this.mouseDownCounter=2;this.timer=false;this.setupNamedPatterns(e);this.state=this.createState();this.setupSettings(e);this.setupModes(e);this.setupUI(e);this.initPattern();this.resize();this.state.fireChangedForAll();this.drawAllCells()}GameOfLife.prototype.isString=function(e){return typeof e=="string"||e instanceof String};GameOfLife.prototype.overwriteJSObject=function(e,t){for(var n in t){e[n]=t[n]}return e};GameOfLife.prototype.callThatFunction=function(e,t){t=t||[];var n=this;if(this.isString(e)){return function(){n[e].apply(n,t)}}else{return function(){e.apply(n,t)}}};GameOfLife.prototype.createState=function(){return new AppStateBinder({autoplay:{type:"flag",changed:this.callThatFunction("updateAutoplay")},nogrid:{type:"flag",changed:this.callThatFunction("updateShowGrid")},patternData:{type:"json",changed:this.callThatFunction("updatePattern")},pattern:{type:"option",changed:this.callThatFunction("updatePattern"),options:this.getPatternNames(true)},border:{type:"option",changed:this.callThatFunction("updateBorder"),options:["torus","alive","dead"]},speed:{type:"number",changed:this.callThatFunction("updateSpeed"),prefix:"",suffix:"ms",min:0,max:1e4},size:{type:"numberObject",changed:this.callThatFunction("updateSize"),separators:["","x",""],attributes:["width","height"],ranges:{width:[1,500],height:[1,500]}},patternOffset:{type:"numberObject",changed:this.callThatFunction("updatePatternOffset"),separators:["+","x",""],attributes:["j","i"],ranges:{j:[0,499],i:[0,499]}},rules:{type:"custom",changed:this.callThatFunction("updateRules"),parse:function(e){if(e.indexOf("/")<0){return false}var t=e.split("/");if(t.length!==2){return false}var n={};n.keepAlive=new Array(9);n.revive=new Array(9);for(var r=0;r<9;r++){n.keepAlive[r]=t[0].indexOf(""+r)>=0}for(var r=0;r<9;r++){n.revive[r]=t[1].indexOf(""+r)>=0}return n},stringify:function(e){var t="";for(var n=0;n<e.keepAlive.length;n++){if(e.keepAlive[n]){t+=n}}t+="/";for(var n=0;n<e.revive.length;n++){if(e.revive[n]){t+=n}}return t}}})};GameOfLife.prototype.updateAutoplay=function(){if(this.state.isSet("autoplay")){this.state.unset("autoplay");this.start()}};GameOfLife.prototype.updatePattern=function(){var e=this.state.get("pattern");var t=this.state.get("patternData");if(e==="random"){this.pattern="random"}else if(e==="clean"){this.pattern="clean"}else if(e!==false){this.pattern=this.namedPatterns[e];this.html.selectPattern.value=e}else if(t!==false){this.pattern=t}else if(this.defaultSettings.pattern==="random"){this.pattern="random"}else if(this.defaultSettings.pattern==="clean"){this.pattern="clean"}else if(this.isString(this.defaultSettings.pattern)){this.pattern=this.namedPatterns[this.defaultSettings.pattern];this.html.selectPattern.value=this.defaultSettings.pattern}else if(this.defaultSettings.pattern!==false){this.pattern=this.defaultSettings.pattern}else{this.pattern="clean"}this.initPattern();this.drawAllCells()};GameOfLife.prototype.updateBorder=function(){this.setStateOrDefault("border");this.html.selectBorder.value=this.border};GameOfLife.prototype.updateSpeed=function(){this.setStateOrDefault("speed");this.html.speedTextBox.value=this.speed;this.restartIfRunning()};GameOfLife.prototype.updateSize=function(){this.setStateOrDefault("size");this.html.widthTextBox.value=this.size.width;this.html.heightTextBox.value=this.size.height;this.setupMatrices();this.resize();this.initPattern();this.drawAllCells()};GameOfLife.prototype.updatePatternOffset=function(){this.setStateOrDefault("patternOffset");this.html.patternOffsetJTextBox.value=this.patternOffset.j;this.html.patternOffsetITextBox.value=this.patternOffset.i;this.initPattern();this.drawAllCells()};GameOfLife.prototype.updateRules=function(){this.setStateOrDefault("rules");for(var e=0;e<9;e++){this.html.keepAlive[e].checked=this.rules.keepAlive[e];this.html.revive[e].checked=this.rules.revive[e]}};GameOfLife.prototype.updateShowGrid=function(){this.showGrid=!this.state.isSet("nogrid");if(this.showGrid){this.html.gridButton.innerHTML="Hide Grid"}else{this.html.gridButton.innerHTML="Show Grid"}this.resize();this.drawAllCells()};GameOfLife.prototype.setStateOrDefault=function(e){var t=this.state.get(e);if(t===false){this[e]=this.defaultSettings[e]}else{this[e]=t}};GameOfLife.prototype.setupMatrices=function(){if(this.currentGeneration===undefined||this.currentGeneration.length!==this.size.height||this.currentGeneration[0].length!==this.size.width){this.currentGeneration=this.createArray(false);this.nextGeneration=this.createArray(false);this.drawOverlay=this.createArray(0)}else{this.initArray(this.currentGeneration,false);this.initArray(this.nextGeneration,false);this.initArray(this.drawOverlay,0)}};GameOfLife.prototype.setupSettings=function(e){this.defaultSettings=this.overwriteJSObject({},this.defaultDefaultSettings);if(e.settings){this.overwriteJSObject(this.defaultSettings,e.settings)}this.overwriteJSObject(this,this.defaultSettings)};GameOfLife.prototype.setupModes=function(e){if(e.modes){this.modes=[];for(var t=0;t<e.modes.length;t++){if(e.modes[t]==="defaults"){this.modes=this.modes.concat(this.defaultModes)}else{this.modes.push(e.modes[t])}}}else{this.modes=this.defaultModes}};GameOfLife.prototype.setupNamedPatterns=function(e){if(e.patterns){this.namedPatterns={};for(var t in e.patterns){if(t==="defaults"){this.overwriteJSObject(this.namedPatterns,this.defaultNamedPatterns)}else{this.namedPatterns[t]=e.patterns[t]}}}else{this.namedPatterns=this.defaultNamedPatterns}};GameOfLife.prototype.setupUI=function(e){var t=this;this.html={};var n;if(this.isString(e.container)){n=document.getElementById(e.container)}else{n=e.container}var r=function(e,n){t.html[e]=n};this.setupUIWindow();this.html.container=this.setupUIElement(n,"div","game-of-life");this.html.controls=this.setupUIElement(this.html.container,"form","controls");n=this.setupUIElement(this.html.controls,"fieldset","buttons");{r("startButton",this.setupUIButton(n,"Start","toggleRunning"));this.setupUIButton(n,"Step","step");this.setupUIButton(n,"Clear","initNamedPattern",["clean"]);this.setupUIButton(n,"Random","initNamedPattern",["random"]);r("gridButton",this.setupUIButton(n,"Hide Grid","toggleGrid"));this.setupUIButton(n,"Export Current Generation","exportCurrentGeneration");this.setupUIButton(n,"Custom Pattern","toggleCustomPattern")}this.html.settingsContainer=this.setupUIElement(this.html.controls,"fieldset","settings");n=this.html.settingsContainer;{r("selectMode",this.setupUIComboBox(n,"Presets","setMode",this.modes));this.html.selectMode.className="input";r("selectBorder",this.setupUIComboBox(n,"Border Behavior","setBorder",["dead","torus","alive"]));this.html.selectBorder.className="input";r("selectPattern",this.setupUIComboBox(n,"Pattern","initNamedPattern",this.getPatternNames(false)));this.html.selectPattern.className="input";r("patternOffsetJTextBox",this.setupUITextBox(n,"Pattern Offset X (cells)","setPatternOffset"));r("patternOffsetITextBox",this.setupUITextBox(n,"Pattern Offset Y (cells)","setPatternOffset"));r("widthTextBox",this.setupUITextBox(n,"Width (cells)","setSize"));r("heightTextBox",this.setupUITextBox(n,"Height (cells)","setSize"));r("speedTextBox",this.setupUITextBox(n,"Speed (ms per step)","setSpeed"));n=this.setupUIElement(this.html.settingsContainer,"fieldset","rules keep-alive");n=this.setupUILegend(n,"Keep Alive");n=this.setupUIElement(n,"fieldset","rule-items");r("keepAlive",this.setupUICheckBoxes(n,"setRules"));n=this.setupUIElement(this.html.settingsContainer,"fieldset","rules revive");n=this.setupUILegend(n,"Revive");n=this.setupUIElement(n,"fieldset","rule-items");r("revive",this.setupUICheckBoxes(n,"setRules"))}this.html.customPatternContainer=this.setupUIElement(this.html.controls,"fieldset","custom-pattern");n=this.html.customPatternContainer;{r("customPattern",this.setupUITextArea(n,"Custom Pattern (. = dead cell)","setCustomPattern"))}n=this.setupUIElement(this.html.container,"div","canvas");{this.setupUICanvas(n)}};GameOfLife.prototype.setupUIWindow=function(){var e=this;window.addEventListener("resize",function(){e.resize();e.drawAllCells()},false)};GameOfLife.prototype.setupUIElement=function(e,t,n){var r=document.createElement(t);r.className=n;e.appendChild(r);return r};GameOfLife.prototype.setupUILegend=function(e,t){var n=document.createElement("legend");n.innerHTML=t;e.appendChild(n);return n};GameOfLife.prototype.setupUIButton=function(e,t,n,r){var i=document.createElement("button");i.innerHTML=t;i.addEventListener("click",this.callThatFunction(n,r||[]),false);e.appendChild(i);return i};GameOfLife.prototype.setupUITextBox=function(e,t,n){var r=document.createElement("label");r.innerHTML=t;var i=document.createElement("input");i.setAttribute("type","text");i.addEventListener("keyup",this.callThatFunction(n),false);r.appendChild(i);e.appendChild(r);return i};GameOfLife.prototype.setupUITextArea=function(e,t,n){var r=document.createElement("label");r.innerHTML=t;var i=document.createElement("textarea");i.addEventListener("keyup",this.callThatFunction(n),false);r.appendChild(i);e.appendChild(r);return i};GameOfLife.prototype.setupUICheckBox=function(e,t,n){var r=document.createElement("label");var i=document.createElement("input");i.setAttribute("type","checkbox");i.addEventListener("change",this.callThatFunction(n),false);r.appendChild(i);r.appendChild(document.createTextNode(t));e.appendChild(r);return i};GameOfLife.prototype.setupUICheckBoxes=function(e,t){var n=[];for(var r=0;r<9;r++){n.push(this.setupUICheckBox(e,""+r,t))}return n};GameOfLife.prototype.setupUIComboBox=function(e,t,n,r){var i=document.createElement("label");i.innerHTML=t;var s=document.createElement("select");for(var o=0;o<r.length;o++){var u=document.createElement("option");if(this.isString(r[o])){u.innerHTML=r[o];u.setAttribute("value",r[o])}else{u.innerHTML=r[o].title;u.setAttribute("value",r[o].value)}s.appendChild(u)}s.addEventListener("change",this.callThatFunction(n),false);i.appendChild(s);e.appendChild(i);return s};GameOfLife.prototype.setupUICanvas=function(e){var t=this;this.html.canvas=document.createElement("canvas");this.html.canvas.addEventListener("mousemove",function(e){t.mouseMove(e)});this.html.canvas.addEventListener("mousedown",function(e){t.mouseMove(e)});this.html.canvas.addEventListener("mouseup",function(e){t.mouseUp(e)});e.appendChild(this.html.canvas);this.html.context=this.html.canvas.getContext("2d")};GameOfLife.prototype.exportCurrentGeneration=function(){if(this.currentGenerationChanged){var e=this.size.height;var t=this.size.width;for(var n=0;n<this.size.height;n++){for(var r=0;r<this.size.width;r++){if(this.currentGeneration[n][r]){if(e>n){e=n}if(t>r){t=r}}}}if(e===this.size.height){this.state.unset("patternOffset");this.state.unset("patternData");this.state.set("pattern","clean");return}var i={};for(var n=0;n<this.size.height;n++){for(var r=0;r<this.size.width;r++){if(this.currentGeneration[n][r]){if(i[n-e]){}else{i[n-e]=[]}i[n-e].push(r-t)}}}if(e>0||t>0){this.state.set("patternOffset",{i:e,j:t})}else{this.state.unset("patternOffset")}this.state.set("patternData",i);this.state.unset("pattern")}};GameOfLife.prototype.setSpeed=function(){this.state.setStringValue("speed",this.html.speedTextBox.value+"ms")};GameOfLife.prototype.setSize=function(){this.state.setStringValue("size",this.html.widthTextBox.value+"x"+this.html.heightTextBox.value)};GameOfLife.prototype.setPatternOffset=function(){this.state.setStringValue("patternOffset","+"+this.html.patternOffsetJTextBox.value+"x"+this.html.patternOffsetITextBox.value)};GameOfLife.prototype.setRules=function(){var e=new Array(9);var t=new Array(9);for(var n=0;n<9;n++){e[n]=this.html.keepAlive[n].checked;t[n]=this.html.revive[n].checked}this.state.set("rules",{keepAlive:e,revive:t})};GameOfLife.prototype.setCustomPattern=function(){this.state.unset("pattern");this.state.unset("patternData");var e={};var t=this.html.customPattern.value.split("\n");for(var n=0;n<t.length;n++){var r=this.parseLine(t[n].trim().split(""));if(r.length>0){e[n]=r}}this.pattern=e;this.initPattern();this.drawAllCells();this.currentGenerationChanged=true};GameOfLife.prototype.parseLine=function(e){var t=[];for(var n=0;n<e.length;n++){if(e[n]!=="."){t.push(n)}}return t};GameOfLife.prototype.setMode=function(){window.location.hash=this.html.selectMode.value};GameOfLife.prototype.setBorder=function(){this.state.setStringValue("border",this.html.selectBorder.value)};GameOfLife.prototype.toggleCustomPattern=function(){var e=this.html.settingsContainer.style.display!=="none";if(e){this.html.settingsContainer.style.display="none";this.html.customPatternContainer.style.display="block"}else{this.html.settingsContainer.style.display="block";this.html.customPatternContainer.style.display="none"}};GameOfLife.prototype.toggleGrid=function(){this.state.toggle("nogrid")};GameOfLife.prototype.toggleRunning=function(){if(this.isRunning()){this.stop()}else{this.start()}};GameOfLife.prototype.start=function(){var e=this;if(!this.isRunning()){this.timer=window.setInterval(function(){e.step()},this.speed);document.title="▶ "+document.title;this.html.startButton.innerHTML="Stop"}};GameOfLife.prototype.stop=function(){if(this.isRunning()){window.clearInterval(this.timer);this.timer=false;document.title=document.title.substring(2);this.html.startButton.innerHTML="Start"}};GameOfLife.prototype.restartIfRunning=function(){if(this.isRunning()){this.stop();this.start()}};GameOfLife.prototype.isRunning=function(){return!(this.timer===false)};GameOfLife.prototype.initNamedPattern=function(e){if(e!==undefined){this.state.setStringValue("pattern",e,true);this.state.unset("patternData")}else{this.state.setStringValue("pattern",this.html.selectPattern.value,true);this.state.unset("patternData")}};GameOfLife.prototype.initPattern=function(){var e=this.isRunning();this.stop();this.setupMatrices();if(this.pattern==="random"){this.createRandomPattern()}else if(this.pattern==="clean"){this.createDataPattern(0,0,{})}else{this.createDataPattern(this.patternOffset.i,this.patternOffset.j,this.pattern)}delete this.currentGenerationChanged;if(e){this.start()}};GameOfLife.prototype.createRandomPattern=function(){for(var e=0;e<this.size.height;e++){for(var t=0;t<this.size.width;t++){this.currentGeneration[e][t]=Math.random()<.5}}};GameOfLife.prototype.createDataPattern=function(e,t,n){for(var r in n){var i=parseInt(r);for(var s=0;s<n[i].length;s++){var o=e+i;var u=t+parseInt(n[i][s]);if(o>=0&&o<this.size.height&&u>=0&&u<this.size.width){this.currentGeneration[o][u]=true}}}};GameOfLife.prototype.createArray=function(e){var t=new Array(this.size.height);for(var n=0;n<this.size.height;n++){t[n]=new Array(this.size.width);for(var r=0;r<this.size.width;r++){t[n][r]=e}}return t};GameOfLife.prototype.initArray=function(e,t){for(var n=0;n<e.length;n++){for(var r=0;r<e[n].length;r++){e[n][r]=t}}return e};GameOfLife.prototype.resize=function(){var e;if(this.size.width/this.size.height>this.maxCanvasSize.width/this.maxCanvasSize.height){e=this.maxCanvasSize.width}else{e=this.maxCanvasSize.height*this.size.width/this.size.height|0}if(e>this.html.canvas.parentNode.offsetWidth){e=this.html.canvas.parentNode.offsetWidth}this.html.canvas.width=e;this.html.canvas.height=this.html.canvas.width*this.size.height/this.size.width;if(this.showGrid){this.cellOffset=1}else{this.cellOffset=0}var t=(this.html.canvas.width-2+this.cellOffset)/this.size.width;var n=(this.html.canvas.height-2+this.cellOffset)/this.size.height;this.toXCoordinateArray=new Array(this.size.width+1);for(var r=0;r<=this.size.width;r++){this.toXCoordinateArray[r]=(r*t|0)+1-this.cellOffset}this.toYCoordinateArray=new Array(this.size.height+1);for(var i=0;i<=this.size.height;i++){this.toYCoordinateArray[i]=(i*n|0)+1-this.cellOffset}this.cellWidth=new Array(this.size.width);for(var r=0;r<this.size.width;r++){this.cellWidth[r]=this.toXCoordinateArray[r+1]-this.toXCoordinateArray[r]-this.cellOffset}this.cellHeight=new Array(this.size.height);for(var i=0;i<this.size.height;i++){this.cellHeight[i]=this.toYCoordinateArray[i+1]-this.toYCoordinateArray[i]-this.cellOffset}this.toICellArray=new Array(this.html.canvas.height);for(var s=0;s<=this.html.canvas.height;s++){this.toICellArray[s]=(s-1)/n|0}this.toJCellArray=new Array(this.html.canvas.width);for(var o=0;o<=this.html.canvas.width;o++){this.toJCellArray[o]=(o-1)/t|0}this.toITorusCoordinateArray=new Array(this.size.height+2);this.toITorusCoordinateArray[0]=this.size.height-1;for(var i=0;i<=this.size.height;i++){this.toITorusCoordinateArray[i+1]=i}this.toITorusCoordinateArray[this.size.height+1]=0;this.toJTorusCoordinateArray=new Array(this.size.width+2);this.toJTorusCoordinateArray[0]=this.size.width-1;for(var r=0;r<=this.size.width;r++){this.toJTorusCoordinateArray[r+1]=r}this.toJTorusCoordinateArray[this.size.width+1]=0;this.drawGrid();this.drawBorder()};GameOfLife.prototype.drawGrid=function(){if(this.showGrid){for(var e=1;e<this.size.height;e++){this.drawHorizontalLine(e)}for(var t=1;t<this.size.width;t++){this.drawVerticalLine(t)}this.html.context.strokeStyle=this.color.grid;this.html.context.stroke()}};GameOfLife.prototype.drawBorder=function(){this.drawHorizontalLine(0);this.drawHorizontalLine(this.size.height);this.drawVerticalLine(0);this.drawVerticalLine(this.size.width);this.html.context.strokeStyle=this.color.border;this.html.context.stroke()};GameOfLife.prototype.drawHorizontalLine=function(e){var t=this.toYCoordinateArray[e];this.html.context.moveTo(0,t);this.html.context.lineTo(this.html.canvas.width,t)};GameOfLife.prototype.drawVerticalLine=function(e){var t=this.toXCoordinateArray[e];this.html.context.moveTo(t,0);this.html.context.lineTo(t,this.html.canvas.height)};GameOfLife.prototype.drawAllCells=function(){for(var e=0;e<this.size.height;e++){for(var t=0;t<this.size.width;t++){this.drawCell(e,t,this.currentGeneration[e][t])}}};GameOfLife.prototype.drawCell=function(e,t,n){var r=this.toXCoordinateArray[t]+this.cellOffset;var i=this.toYCoordinateArray[e]+this.cellOffset;var s=this.cellWidth[t];var o=this.cellHeight[e];if(this.drawOverlay[e][t]===this.mouseDownCounter){this.html.context.fillStyle=this.color.setAlive;this.html.context.fillRect(r,i,s,o)}else if(this.drawOverlay[e][t]===-this.mouseDownCounter){this.html.context.fillStyle=this.color.setDead;this.html.context.fillRect(r,i,s,o)}else if(n){this.html.context.fillStyle=this.color.alive;this.html.context.fillRect(r,i,s,o)}else{this.html.context.fillStyle=this.color.dead;this.html.context.fillRect(r,i,s,o)}};GameOfLife.prototype.step=function(){for(var e=0;e<this.size.height;e++){for(var t=0;t<this.size.width;t++){var n=this.countNeighbors(e,t);this.nextGeneration[e][t]=this.currentGeneration[e][t]&&this.rules.keepAlive[n]||this.rules.revive[n];if(this.nextGeneration[e][t]!==this.currentGeneration[e][t]){this.drawCell(e,t,this.nextGeneration[e][t])}}}var r=this.currentGeneration;this.currentGeneration=this.nextGeneration;this.nextGeneration=r;this.currentGenerationChanged=true};GameOfLife.prototype.countNeighbors=function(e,t){if(this.border==="torus"){return this.countNeighborsTorus(e,t)}else if(this.border==="alive"){return this.countNeighborsBorderAlive(e,t)}else if(this.border==="dead"){return this.countNeighborsBorderDead(e,t)}};GameOfLife.prototype.countNeighborsTorus=function(e,t){var n=0;for(var r=0;r<=2;r++){for(var i=0;i<=2;i++){if((r!=1||i!=1)&&this.currentGeneration[this.toITorusCoordinateArray[e+r]][this.toJTorusCoordinateArray[t+i]]){n++}}}return n};GameOfLife.prototype.countNeighborsBorderAlive=function(e,t){var n=8;if(e>=1){if(!this.currentGeneration[e-1][t]){n--}if(t>=1&&!this.currentGeneration[e-1][t-1]){n--}if(t<this.size.width-1&&!this.currentGeneration[e-1][t+1]){n--}}if(e<this.size.height-1){if(!this.currentGeneration[e+1][t]){n--}if(t>=1&&!this.currentGeneration[e+1][t-1]){n--}if(t<this.size.width-1&&!this.currentGeneration[e+1][t+1]){n--}}if(t>=1&&!this.currentGeneration[e][t-1]){n--}if(t<this.size.width-1&&!this.currentGeneration[e][t+1]){n--}return n};GameOfLife.prototype.countNeighborsBorderDead=function(e,t){var n=0;if(e>=1){if(this.currentGeneration[e-1][t]){n++}if(t>=1&&this.currentGeneration[e-1][t-1]){n++}if(t<this.size.width-1&&this.currentGeneration[e-1][t+1]){n++}}if(e<this.size.height-1){if(this.currentGeneration[e+1][t]){n++}if(t>=1&&this.currentGeneration[e+1][t-1]){n++}if(t<this.size.width-1&&this.currentGeneration[e+1][t+1]){n++}}if(t>=1&&this.currentGeneration[e][t-1]){n++}if(t<this.size.width-1&&this.currentGeneration[e][t+1]){n++}return n};GameOfLife.prototype.mouseMove=function(e){if(e.buttons==1){if(this.mouseDownCounter%2==0){this.mouseDownCounter++}var t=this.html.canvas.getBoundingClientRect();var n=this.toICellArray[e.clientY-t.top|0];var r=this.toJCellArray[e.clientX-t.left|0];if(this.currentGeneration[n][r]&&this.drawOverlay[n][r]!==-this.mouseDownCounter){this.drawOverlay[n][r]=-this.mouseDownCounter;this.drawCell(n,r,this.currentGeneration[n][r])}else if(!this.currentGeneration[n][r]&&this.drawOverlay[n][r]!==this.mouseDownCounter){this.drawOverlay[n][r]=this.mouseDownCounter;this.drawCell(n,r,this.currentGeneration[n][r])}}else{if(this.mouseDownCounter%2==1){this.mouseUp(e)}}};GameOfLife.prototype.mouseUp=function(e){var t=this.mouseDownCounter;this.mouseDownCounter++;for(var n=0;n<this.size.height;n++){for(var r=0;r<this.size.width;r++){if(this.drawOverlay[n][r]===t){this.currentGeneration[n][r]=true}else if(this.drawOverlay[n][r]===-t){this.currentGeneration[n][r]=false}}}this.currentGenerationChanged=true;this.drawAllCells()};GameOfLife.prototype.getPatternNames=function(e){var t=[];if(e===true){t.push("clean");t.push("random")}for(var n in this.namedPatterns){if(e===true||n!=="clean"&&n!=="random"){t.push(n)}}return t};GameOfLife.prototype.defaultNamedPatterns={"glider-gun":{0:[24],1:[22,24],2:[12,13,20,21,34,35],3:[11,15,20,21,34,35],4:[0,1,10,16,20,21],5:[0,1,10,14,16,17,22,24],6:[10,16,24],7:[11,15],8:[12,13]},line:{0:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199]}};GameOfLife.prototype.defaultModes=[{title:"23/3 - Conway's Original Game Of Life",value:"23/3|random"},{title:"23/3 - Conway's Original Game Of Life - Line",value:"23/3|line|+100x110|400x221|1ms|nogrid"},{title:"23/3 - Conway's Original Game Of Life - Glider Gun",value:"23/3|glider-gun"},{title:"01234678/0123478 - Anti-Conway",value:"01234678/0123478|random|torus"},{title:"1357/1357 - Copyworld",value:"1357/1357|torus|100x100"},{title:"02468/02468 - Anti-Copyworld",value:"02468/02468|torus|100x100"},{title:"02468/02468 - Anti-Copyworld - Dead Border",value:"02468/02468|+20x20|dead|200x200|nogrid|10ms"},{title:"12345/3 - Labyrinth",value:"12345/3|torus|10ms"},{title:"45678/5678 - Majorities",value:"45678/5678|random|10ms"}];GameOfLife.prototype.defaultDefaultSettings={rules:{keepAlive:[false,false,true,true,false,false,false,false,false],revive:[false,false,false,true,false,false,false,false,false]},size:{width:100,height:60},patternOffset:{i:0,j:0},pattern:"clean",speed:100,showGrid:true,border:"dead",maxCanvasSize:{width:1e3,height:1e3},color:{border:"#eee",grid:"#eee",alive:"#000",dead:"#fff",setAlive:"#33c",setDead:"#77c"}}